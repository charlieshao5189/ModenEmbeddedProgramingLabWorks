
IR_RC_NEC_2560_C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000080  00800200  00000d40  00000dd4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d40  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  00800280  00800280  00000e54  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e54  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000eb0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00000ef0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b16  00000000  00000000  00000fd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000051a  00000000  00000000  00001ae6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006ca  00000000  00000000  00002000  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000218  00000000  00000000  000026cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000047e  00000000  00000000  000028e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000038e  00000000  00000000  00002d62  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  000030f0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	a4 c2       	rjmp	.+1352   	; 0x55a <__vector_4>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	cb c0       	rjmp	.+406    	; 0x1dc <__vector_17>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	03 c3       	rjmp	.+1542   	; 0x66c <__vector_25>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e0 e4       	ldi	r30, 0x40	; 64
  fc:	fd e0       	ldi	r31, 0x0D	; 13
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 38       	cpi	r26, 0x80	; 128
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a0 e8       	ldi	r26, 0x80	; 128
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a4 39       	cpi	r26, 0x94	; 148
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	bc d2       	rcall	.+1400   	; 0x698 <main>
 120:	0d c6       	rjmp	.+3098   	; 0xd3c <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <ir_reset>:
	cycles_counter = 0;
	state = STATE_START;
}

void ir_handle_state_wait_edge_rising() {
	ir_reset();
 124:	10 92 85 02 	sts	0x0285, r1	; 0x800285 <state>
 128:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <__data_end>
 12c:	10 92 90 02 	sts	0x0290, r1	; 0x800290 <cycles_counter>
 130:	10 92 91 02 	sts	0x0291, r1	; 0x800291 <cycles_counter+0x1>
 134:	10 92 92 02 	sts	0x0292, r1	; 0x800292 <cycles_counter+0x2>
 138:	10 92 93 02 	sts	0x0293, r1	; 0x800293 <cycles_counter+0x3>
 13c:	08 95       	ret

0000013e <ir_init>:
 13e:	e1 e8       	ldi	r30, 0x81	; 129
 140:	f0 e0       	ldi	r31, 0x00	; 0
 142:	80 81       	ld	r24, Z
 144:	88 60       	ori	r24, 0x08	; 8
 146:	80 83       	st	Z, r24
 148:	80 81       	ld	r24, Z
 14a:	81 60       	ori	r24, 0x01	; 1
 14c:	80 83       	st	Z, r24
 14e:	ef e6       	ldi	r30, 0x6F	; 111
 150:	f0 e0       	ldi	r31, 0x00	; 0
 152:	80 81       	ld	r24, Z
 154:	82 60       	ori	r24, 0x02	; 2
 156:	80 83       	st	Z, r24
 158:	8f e9       	ldi	r24, 0x9F	; 159
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 160:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
 164:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
 168:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
 16c:	53 98       	cbi	0x0a, 3	; 10
 16e:	eb 9a       	sbi	0x1d, 3	; 29
 170:	e9 e6       	ldi	r30, 0x69	; 105
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	80 81       	ld	r24, Z
 176:	80 68       	ori	r24, 0x80	; 128
 178:	80 83       	st	Z, r24
 17a:	78 94       	sei
 17c:	d3 df       	rcall	.-90     	; 0x124 <ir_reset>
 17e:	10 92 86 02 	sts	0x0286, r1	; 0x800286 <total_cycles_counter>
 182:	10 92 87 02 	sts	0x0287, r1	; 0x800287 <total_cycles_counter+0x1>
 186:	10 92 88 02 	sts	0x0288, r1	; 0x800288 <total_cycles_counter+0x2>
 18a:	10 92 89 02 	sts	0x0289, r1	; 0x800289 <total_cycles_counter+0x3>
 18e:	08 95       	ret

00000190 <ir_check_command>:
 190:	98 23       	and	r25, r24
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	09 f0       	breq	.+2      	; 0x198 <ir_check_command+0x8>
 196:	80 e0       	ldi	r24, 0x00	; 0
 198:	08 95       	ret

0000019a <ir_check_timeout>:
 19a:	80 91 86 02 	lds	r24, 0x0286	; 0x800286 <total_cycles_counter>
 19e:	90 91 87 02 	lds	r25, 0x0287	; 0x800287 <total_cycles_counter+0x1>
 1a2:	a0 91 88 02 	lds	r26, 0x0288	; 0x800288 <total_cycles_counter+0x2>
 1a6:	b0 91 89 02 	lds	r27, 0x0289	; 0x800289 <total_cycles_counter+0x3>
 1aa:	88 3f       	cpi	r24, 0xF8	; 248
 1ac:	9a 42       	sbci	r25, 0x2A	; 42
 1ae:	a1 05       	cpc	r26, r1
 1b0:	b1 05       	cpc	r27, r1
 1b2:	98 f0       	brcs	.+38     	; 0x1da <ir_check_timeout+0x40>
 1b4:	b7 df       	rcall	.-146    	; 0x124 <ir_reset>
 1b6:	10 92 86 02 	sts	0x0286, r1	; 0x800286 <total_cycles_counter>
 1ba:	10 92 87 02 	sts	0x0287, r1	; 0x800287 <total_cycles_counter+0x1>
 1be:	10 92 88 02 	sts	0x0288, r1	; 0x800288 <total_cycles_counter+0x2>
 1c2:	10 92 89 02 	sts	0x0289, r1	; 0x800289 <total_cycles_counter+0x3>
 1c6:	e9 e6       	ldi	r30, 0x69	; 105
 1c8:	f0 e0       	ldi	r31, 0x00	; 0
 1ca:	80 81       	ld	r24, Z
 1cc:	80 68       	ori	r24, 0x80	; 128
 1ce:	80 83       	st	Z, r24
 1d0:	80 81       	ld	r24, Z
 1d2:	8f 7b       	andi	r24, 0xBF	; 191
 1d4:	80 83       	st	Z, r24
 1d6:	10 92 8f 02 	sts	0x028F, r1	; 0x80028f <edge>
 1da:	08 95       	ret

000001dc <__vector_17>:
 1dc:	1f 92       	push	r1
 1de:	0f 92       	push	r0
 1e0:	0f b6       	in	r0, 0x3f	; 63
 1e2:	0f 92       	push	r0
 1e4:	11 24       	eor	r1, r1
 1e6:	8f 93       	push	r24
 1e8:	9f 93       	push	r25
 1ea:	af 93       	push	r26
 1ec:	bf 93       	push	r27
 1ee:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <cycles_counter>
 1f2:	90 91 91 02 	lds	r25, 0x0291	; 0x800291 <cycles_counter+0x1>
 1f6:	a0 91 92 02 	lds	r26, 0x0292	; 0x800292 <cycles_counter+0x2>
 1fa:	b0 91 93 02 	lds	r27, 0x0293	; 0x800293 <cycles_counter+0x3>
 1fe:	01 96       	adiw	r24, 0x01	; 1
 200:	a1 1d       	adc	r26, r1
 202:	b1 1d       	adc	r27, r1
 204:	80 93 90 02 	sts	0x0290, r24	; 0x800290 <cycles_counter>
 208:	90 93 91 02 	sts	0x0291, r25	; 0x800291 <cycles_counter+0x1>
 20c:	a0 93 92 02 	sts	0x0292, r26	; 0x800292 <cycles_counter+0x2>
 210:	b0 93 93 02 	sts	0x0293, r27	; 0x800293 <cycles_counter+0x3>
 214:	80 91 86 02 	lds	r24, 0x0286	; 0x800286 <total_cycles_counter>
 218:	90 91 87 02 	lds	r25, 0x0287	; 0x800287 <total_cycles_counter+0x1>
 21c:	a0 91 88 02 	lds	r26, 0x0288	; 0x800288 <total_cycles_counter+0x2>
 220:	b0 91 89 02 	lds	r27, 0x0289	; 0x800289 <total_cycles_counter+0x3>
 224:	01 96       	adiw	r24, 0x01	; 1
 226:	a1 1d       	adc	r26, r1
 228:	b1 1d       	adc	r27, r1
 22a:	80 93 86 02 	sts	0x0286, r24	; 0x800286 <total_cycles_counter>
 22e:	90 93 87 02 	sts	0x0287, r25	; 0x800287 <total_cycles_counter+0x1>
 232:	a0 93 88 02 	sts	0x0288, r26	; 0x800288 <total_cycles_counter+0x2>
 236:	b0 93 89 02 	sts	0x0289, r27	; 0x800289 <total_cycles_counter+0x3>
 23a:	bf 91       	pop	r27
 23c:	af 91       	pop	r26
 23e:	9f 91       	pop	r25
 240:	8f 91       	pop	r24
 242:	0f 90       	pop	r0
 244:	0f be       	out	0x3f, r0	; 63
 246:	0f 90       	pop	r0
 248:	1f 90       	pop	r1
 24a:	18 95       	reti

0000024c <ir_handle_state_wait_edge_falling>:
 24c:	10 92 90 02 	sts	0x0290, r1	; 0x800290 <cycles_counter>
 250:	10 92 91 02 	sts	0x0291, r1	; 0x800291 <cycles_counter+0x1>
 254:	10 92 92 02 	sts	0x0292, r1	; 0x800292 <cycles_counter+0x2>
 258:	10 92 93 02 	sts	0x0293, r1	; 0x800293 <cycles_counter+0x3>
 25c:	81 e0       	ldi	r24, 0x01	; 1
 25e:	80 93 85 02 	sts	0x0285, r24	; 0x800285 <state>
 262:	08 95       	ret

00000264 <ir_handle_state_start_edge_falling>:
}

void ir_handle_state_start_edge_falling() {
	
	if(cycles_counter >= TIME_START_HALFBIT_HIGH_COMMAND_MIN && cycles_counter <= TIME_START_HALFBIT_HIGH_COMMAND_MAX) {
 264:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <cycles_counter>
 268:	90 91 91 02 	lds	r25, 0x0291	; 0x800291 <cycles_counter+0x1>
 26c:	a0 91 92 02 	lds	r26, 0x0292	; 0x800292 <cycles_counter+0x2>
 270:	b0 91 93 02 	lds	r27, 0x0293	; 0x800293 <cycles_counter+0x3>
 274:	89 3a       	cpi	r24, 0xA9	; 169
 276:	91 40       	sbci	r25, 0x01	; 1
 278:	a1 05       	cpc	r26, r1
 27a:	b1 05       	cpc	r27, r1
 27c:	d8 f0       	brcs	.+54     	; 0x2b4 <ir_handle_state_start_edge_falling+0x50>
 27e:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <cycles_counter>
 282:	90 91 91 02 	lds	r25, 0x0291	; 0x800291 <cycles_counter+0x1>
 286:	a0 91 92 02 	lds	r26, 0x0292	; 0x800292 <cycles_counter+0x2>
 28a:	b0 91 93 02 	lds	r27, 0x0293	; 0x800293 <cycles_counter+0x3>
 28e:	8c 3d       	cpi	r24, 0xDC	; 220
 290:	91 40       	sbci	r25, 0x01	; 1
 292:	a1 05       	cpc	r26, r1
 294:	b1 05       	cpc	r27, r1
 296:	70 f4       	brcc	.+28     	; 0x2b4 <ir_handle_state_start_edge_falling+0x50>
		//fprintf(USART,"cycles_counter:%d\n",cycles_counter );
		state = STATE_BITS;
 298:	82 e0       	ldi	r24, 0x02	; 2
 29a:	80 93 85 02 	sts	0x0285, r24	; 0x800285 <state>
		command_bits_counter = 0;
 29e:	10 92 8e 02 	sts	0x028E, r1	; 0x80028e <command_bits_counter>
		command = 0;
 2a2:	10 92 81 02 	sts	0x0281, r1	; 0x800281 <command>
 2a6:	10 92 82 02 	sts	0x0282, r1	; 0x800282 <command+0x1>
 2aa:	10 92 83 02 	sts	0x0283, r1	; 0x800283 <command+0x2>
 2ae:	10 92 84 02 	sts	0x0284, r1	; 0x800284 <command+0x3>
		return;
 2b2:	08 95       	ret
	}

	if (cycles_counter >= TIME_START_HALFBIT_HIGH_REPEAT_MIN && cycles_counter <= TIME_START_HALFBIT_HIGH_REPEAT_MAX) {
 2b4:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <cycles_counter>
 2b8:	90 91 91 02 	lds	r25, 0x0291	; 0x800291 <cycles_counter+0x1>
 2bc:	a0 91 92 02 	lds	r26, 0x0292	; 0x800292 <cycles_counter+0x2>
 2c0:	b0 91 93 02 	lds	r27, 0x0293	; 0x800293 <cycles_counter+0x3>
 2c4:	88 3c       	cpi	r24, 0xC8	; 200
 2c6:	91 05       	cpc	r25, r1
 2c8:	a1 05       	cpc	r26, r1
 2ca:	b1 05       	cpc	r27, r1
 2cc:	20 f1       	brcs	.+72     	; 0x316 <ir_handle_state_start_edge_falling+0xb2>
 2ce:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <cycles_counter>
 2d2:	90 91 91 02 	lds	r25, 0x0291	; 0x800291 <cycles_counter+0x1>
 2d6:	a0 91 92 02 	lds	r26, 0x0292	; 0x800292 <cycles_counter+0x2>
 2da:	b0 91 93 02 	lds	r27, 0x0293	; 0x800293 <cycles_counter+0x3>
 2de:	8b 3f       	cpi	r24, 0xFB	; 251
 2e0:	91 05       	cpc	r25, r1
 2e2:	a1 05       	cpc	r26, r1
 2e4:	b1 05       	cpc	r27, r1
 2e6:	b8 f4       	brcc	.+46     	; 0x316 <ir_handle_state_start_edge_falling+0xb2>
		state = STATE_STOP;
 2e8:	83 e0       	ldi	r24, 0x03	; 3
 2ea:	80 93 85 02 	sts	0x0285, r24	; 0x800285 <state>
		repeat = 1;
 2ee:	81 e0       	ldi	r24, 0x01	; 1
 2f0:	80 93 80 02 	sts	0x0280, r24	; 0x800280 <__data_end>
		command = current_command;
 2f4:	80 91 8a 02 	lds	r24, 0x028A	; 0x80028a <current_command>
 2f8:	90 91 8b 02 	lds	r25, 0x028B	; 0x80028b <current_command+0x1>
 2fc:	a0 91 8c 02 	lds	r26, 0x028C	; 0x80028c <current_command+0x2>
 300:	b0 91 8d 02 	lds	r27, 0x028D	; 0x80028d <current_command+0x3>
 304:	80 93 81 02 	sts	0x0281, r24	; 0x800281 <command>
 308:	90 93 82 02 	sts	0x0282, r25	; 0x800282 <command+0x1>
 30c:	a0 93 83 02 	sts	0x0283, r26	; 0x800283 <command+0x2>
 310:	b0 93 84 02 	sts	0x0284, r27	; 0x800284 <command+0x3>
		return;
 314:	08 95       	ret
	}

	ir_reset();
 316:	06 cf       	rjmp	.-500    	; 0x124 <ir_reset>
 318:	08 95       	ret

0000031a <ir_handle_state_start_edge_rising>:
}

void ir_handle_state_start_edge_rising() {
	cycles_counter = 0;
 31a:	10 92 90 02 	sts	0x0290, r1	; 0x800290 <cycles_counter>
 31e:	10 92 91 02 	sts	0x0291, r1	; 0x800291 <cycles_counter+0x1>
 322:	10 92 92 02 	sts	0x0292, r1	; 0x800292 <cycles_counter+0x2>
 326:	10 92 93 02 	sts	0x0293, r1	; 0x800293 <cycles_counter+0x3>
	state = STATE_START;
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	80 93 85 02 	sts	0x0285, r24	; 0x800285 <state>
 330:	08 95       	ret

00000332 <ir_handle_state_bits_edge_falling>:
}

void ir_handle_state_bits_edge_falling() {
	//fprintf(USART,"state_bits:%d\n",cycles_counter );
	if (cycles_counter >= TIME_COMMAND_HALFBIT_HIGH_ZERO_MIN && cycles_counter <= TIME_COMMAND_HALFBIT_HIGH_ZERO_MAX) {
 332:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <cycles_counter>
 336:	90 91 91 02 	lds	r25, 0x0291	; 0x800291 <cycles_counter+0x1>
 33a:	a0 91 92 02 	lds	r26, 0x0292	; 0x800292 <cycles_counter+0x2>
 33e:	b0 91 93 02 	lds	r27, 0x0293	; 0x800293 <cycles_counter+0x3>
 342:	4f 97       	sbiw	r24, 0x1f	; 31
 344:	a1 05       	cpc	r26, r1
 346:	b1 05       	cpc	r27, r1
 348:	08 f4       	brcc	.+2      	; 0x34c <ir_handle_state_bits_edge_falling+0x1a>
 34a:	50 c0       	rjmp	.+160    	; 0x3ec <ir_handle_state_bits_edge_falling+0xba>
 34c:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <cycles_counter>
 350:	90 91 91 02 	lds	r25, 0x0291	; 0x800291 <cycles_counter+0x1>
 354:	a0 91 92 02 	lds	r26, 0x0292	; 0x800292 <cycles_counter+0x2>
 358:	b0 91 93 02 	lds	r27, 0x0293	; 0x800293 <cycles_counter+0x3>
 35c:	82 35       	cpi	r24, 0x52	; 82
 35e:	91 05       	cpc	r25, r1
 360:	a1 05       	cpc	r26, r1
 362:	b1 05       	cpc	r27, r1
 364:	08 f0       	brcs	.+2      	; 0x368 <ir_handle_state_bits_edge_falling+0x36>
 366:	42 c0       	rjmp	.+132    	; 0x3ec <ir_handle_state_bits_edge_falling+0xba>
		command = (command << 1);
 368:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <command>
 36c:	90 91 82 02 	lds	r25, 0x0282	; 0x800282 <command+0x1>
 370:	a0 91 83 02 	lds	r26, 0x0283	; 0x800283 <command+0x2>
 374:	b0 91 84 02 	lds	r27, 0x0284	; 0x800284 <command+0x3>
 378:	88 0f       	add	r24, r24
 37a:	99 1f       	adc	r25, r25
 37c:	aa 1f       	adc	r26, r26
 37e:	bb 1f       	adc	r27, r27
 380:	80 93 81 02 	sts	0x0281, r24	; 0x800281 <command>
 384:	90 93 82 02 	sts	0x0282, r25	; 0x800282 <command+0x1>
 388:	a0 93 83 02 	sts	0x0283, r26	; 0x800283 <command+0x2>
 38c:	b0 93 84 02 	sts	0x0284, r27	; 0x800284 <command+0x3>
		command_bits_counter++;
 390:	80 91 8e 02 	lds	r24, 0x028E	; 0x80028e <command_bits_counter>
 394:	8f 5f       	subi	r24, 0xFF	; 255
 396:	80 93 8e 02 	sts	0x028E, r24	; 0x80028e <command_bits_counter>

		if (command_bits_counter < 32) {
 39a:	80 91 8e 02 	lds	r24, 0x028E	; 0x80028e <command_bits_counter>
 39e:	80 32       	cpi	r24, 0x20	; 32
 3a0:	20 f4       	brcc	.+8      	; 0x3aa <ir_handle_state_bits_edge_falling+0x78>
			state = STATE_BITS;
 3a2:	82 e0       	ldi	r24, 0x02	; 2
 3a4:	80 93 85 02 	sts	0x0285, r24	; 0x800285 <state>
 3a8:	08 95       	ret
			} else if (!ir_check_command(command)) {
 3aa:	60 91 81 02 	lds	r22, 0x0281	; 0x800281 <command>
 3ae:	70 91 82 02 	lds	r23, 0x0282	; 0x800282 <command+0x1>
 3b2:	80 91 83 02 	lds	r24, 0x0283	; 0x800283 <command+0x2>
 3b6:	90 91 84 02 	lds	r25, 0x0284	; 0x800284 <command+0x3>
 3ba:	ea de       	rcall	.-556    	; 0x190 <ir_check_command>
 3bc:	81 11       	cpse	r24, r1
 3be:	02 c0       	rjmp	.+4      	; 0x3c4 <ir_handle_state_bits_edge_falling+0x92>
			ir_reset();
 3c0:	b1 ce       	rjmp	.-670    	; 0x124 <ir_reset>
 3c2:	08 95       	ret
			} else {
			state = STATE_STOP;
 3c4:	83 e0       	ldi	r24, 0x03	; 3
 3c6:	80 93 85 02 	sts	0x0285, r24	; 0x800285 <state>
			current_command = command;
 3ca:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <command>
 3ce:	90 91 82 02 	lds	r25, 0x0282	; 0x800282 <command+0x1>
 3d2:	a0 91 83 02 	lds	r26, 0x0283	; 0x800283 <command+0x2>
 3d6:	b0 91 84 02 	lds	r27, 0x0284	; 0x800284 <command+0x3>
 3da:	80 93 8a 02 	sts	0x028A, r24	; 0x80028a <current_command>
 3de:	90 93 8b 02 	sts	0x028B, r25	; 0x80028b <current_command+0x1>
 3e2:	a0 93 8c 02 	sts	0x028C, r26	; 0x80028c <current_command+0x2>
 3e6:	b0 93 8d 02 	sts	0x028D, r27	; 0x80028d <current_command+0x3>
 3ea:	08 95       	ret
		}

		return;
	}

	if (cycles_counter >= TIME_COMMAND_HALFBIT_HIGH_ONE_MIN && cycles_counter <= TIME_COMMAND_HALFBIT_HIGH_ONE_MAX) {
 3ec:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <cycles_counter>
 3f0:	90 91 91 02 	lds	r25, 0x0291	; 0x800291 <cycles_counter+0x1>
 3f4:	a0 91 92 02 	lds	r26, 0x0292	; 0x800292 <cycles_counter+0x2>
 3f8:	b0 91 93 02 	lds	r27, 0x0293	; 0x800293 <cycles_counter+0x3>
 3fc:	80 39       	cpi	r24, 0x90	; 144
 3fe:	91 05       	cpc	r25, r1
 400:	a1 05       	cpc	r26, r1
 402:	b1 05       	cpc	r27, r1
 404:	08 f4       	brcc	.+2      	; 0x408 <__FUSE_REGION_LENGTH__+0x8>
 406:	51 c0       	rjmp	.+162    	; 0x4aa <__FUSE_REGION_LENGTH__+0xaa>
 408:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <cycles_counter>
 40c:	90 91 91 02 	lds	r25, 0x0291	; 0x800291 <cycles_counter+0x1>
 410:	a0 91 92 02 	lds	r26, 0x0292	; 0x800292 <cycles_counter+0x2>
 414:	b0 91 93 02 	lds	r27, 0x0293	; 0x800293 <cycles_counter+0x3>
 418:	83 3c       	cpi	r24, 0xC3	; 195
 41a:	91 05       	cpc	r25, r1
 41c:	a1 05       	cpc	r26, r1
 41e:	b1 05       	cpc	r27, r1
 420:	08 f0       	brcs	.+2      	; 0x424 <__FUSE_REGION_LENGTH__+0x24>
 422:	43 c0       	rjmp	.+134    	; 0x4aa <__FUSE_REGION_LENGTH__+0xaa>
		command = ((command << 1) | 1);
 424:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <command>
 428:	90 91 82 02 	lds	r25, 0x0282	; 0x800282 <command+0x1>
 42c:	a0 91 83 02 	lds	r26, 0x0283	; 0x800283 <command+0x2>
 430:	b0 91 84 02 	lds	r27, 0x0284	; 0x800284 <command+0x3>
 434:	88 0f       	add	r24, r24
 436:	99 1f       	adc	r25, r25
 438:	aa 1f       	adc	r26, r26
 43a:	bb 1f       	adc	r27, r27
 43c:	81 60       	ori	r24, 0x01	; 1
 43e:	80 93 81 02 	sts	0x0281, r24	; 0x800281 <command>
 442:	90 93 82 02 	sts	0x0282, r25	; 0x800282 <command+0x1>
 446:	a0 93 83 02 	sts	0x0283, r26	; 0x800283 <command+0x2>
 44a:	b0 93 84 02 	sts	0x0284, r27	; 0x800284 <command+0x3>
		command_bits_counter++;
 44e:	80 91 8e 02 	lds	r24, 0x028E	; 0x80028e <command_bits_counter>
 452:	8f 5f       	subi	r24, 0xFF	; 255
 454:	80 93 8e 02 	sts	0x028E, r24	; 0x80028e <command_bits_counter>

		if (command_bits_counter < 32) {
 458:	80 91 8e 02 	lds	r24, 0x028E	; 0x80028e <command_bits_counter>
 45c:	80 32       	cpi	r24, 0x20	; 32
 45e:	20 f4       	brcc	.+8      	; 0x468 <__FUSE_REGION_LENGTH__+0x68>
			state = STATE_BITS;
 460:	82 e0       	ldi	r24, 0x02	; 2
 462:	80 93 85 02 	sts	0x0285, r24	; 0x800285 <state>
 466:	08 95       	ret
			} else if (!ir_check_command(command)) {
 468:	60 91 81 02 	lds	r22, 0x0281	; 0x800281 <command>
 46c:	70 91 82 02 	lds	r23, 0x0282	; 0x800282 <command+0x1>
 470:	80 91 83 02 	lds	r24, 0x0283	; 0x800283 <command+0x2>
 474:	90 91 84 02 	lds	r25, 0x0284	; 0x800284 <command+0x3>
 478:	8b de       	rcall	.-746    	; 0x190 <ir_check_command>
 47a:	81 11       	cpse	r24, r1
 47c:	02 c0       	rjmp	.+4      	; 0x482 <__FUSE_REGION_LENGTH__+0x82>
			ir_reset();
 47e:	52 ce       	rjmp	.-860    	; 0x124 <ir_reset>
 480:	08 95       	ret
			} else {
			state = STATE_STOP;
 482:	83 e0       	ldi	r24, 0x03	; 3
 484:	80 93 85 02 	sts	0x0285, r24	; 0x800285 <state>
			current_command = command;
 488:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <command>
 48c:	90 91 82 02 	lds	r25, 0x0282	; 0x800282 <command+0x1>
 490:	a0 91 83 02 	lds	r26, 0x0283	; 0x800283 <command+0x2>
 494:	b0 91 84 02 	lds	r27, 0x0284	; 0x800284 <command+0x3>
 498:	80 93 8a 02 	sts	0x028A, r24	; 0x80028a <current_command>
 49c:	90 93 8b 02 	sts	0x028B, r25	; 0x80028b <current_command+0x1>
 4a0:	a0 93 8c 02 	sts	0x028C, r26	; 0x80028c <current_command+0x2>
 4a4:	b0 93 8d 02 	sts	0x028D, r27	; 0x80028d <current_command+0x3>
 4a8:	08 95       	ret

		return;
	}


	command_bits_counter = 0;
 4aa:	10 92 8e 02 	sts	0x028E, r1	; 0x80028e <command_bits_counter>
	command = 0;
 4ae:	10 92 81 02 	sts	0x0281, r1	; 0x800281 <command>
 4b2:	10 92 82 02 	sts	0x0282, r1	; 0x800282 <command+0x1>
 4b6:	10 92 83 02 	sts	0x0283, r1	; 0x800283 <command+0x2>
 4ba:	10 92 84 02 	sts	0x0284, r1	; 0x800284 <command+0x3>
	ir_reset();
 4be:	32 ce       	rjmp	.-924    	; 0x124 <ir_reset>
 4c0:	08 95       	ret

000004c2 <ir_handle_state_bits_edge_rising>:
}

void ir_handle_state_bits_edge_rising() {
	cycles_counter = 0;
 4c2:	10 92 90 02 	sts	0x0290, r1	; 0x800290 <cycles_counter>
 4c6:	10 92 91 02 	sts	0x0291, r1	; 0x800291 <cycles_counter+0x1>
 4ca:	10 92 92 02 	sts	0x0292, r1	; 0x800292 <cycles_counter+0x2>
 4ce:	10 92 93 02 	sts	0x0293, r1	; 0x800293 <cycles_counter+0x3>
	state = STATE_BITS;
 4d2:	82 e0       	ldi	r24, 0x02	; 2
 4d4:	80 93 85 02 	sts	0x0285, r24	; 0x800285 <state>
 4d8:	08 95       	ret

000004da <ir_handle_state_stop>:
}

void ir_handle_state_stop() {
	cycles_counter = 0;
 4da:	10 92 90 02 	sts	0x0290, r1	; 0x800290 <cycles_counter>
 4de:	10 92 91 02 	sts	0x0291, r1	; 0x800291 <cycles_counter+0x1>
 4e2:	10 92 92 02 	sts	0x0292, r1	; 0x800292 <cycles_counter+0x2>
 4e6:	10 92 93 02 	sts	0x0293, r1	; 0x800293 <cycles_counter+0x3>
	state = STATE_WAIT;
 4ea:	10 92 85 02 	sts	0x0285, r1	; 0x800285 <state>
	current_command = command;
 4ee:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <command>
 4f2:	90 91 82 02 	lds	r25, 0x0282	; 0x800282 <command+0x1>
 4f6:	a0 91 83 02 	lds	r26, 0x0283	; 0x800283 <command+0x2>
 4fa:	b0 91 84 02 	lds	r27, 0x0284	; 0x800284 <command+0x3>
 4fe:	80 93 8a 02 	sts	0x028A, r24	; 0x80028a <current_command>
 502:	90 93 8b 02 	sts	0x028B, r25	; 0x80028b <current_command+0x1>
 506:	a0 93 8c 02 	sts	0x028C, r26	; 0x80028c <current_command+0x2>
 50a:	b0 93 8d 02 	sts	0x028D, r27	; 0x80028d <current_command+0x3>
	fprintf(USART,"current_command:%x\n",current_command );
 50e:	80 91 8a 02 	lds	r24, 0x028A	; 0x80028a <current_command>
 512:	90 91 8b 02 	lds	r25, 0x028B	; 0x80028b <current_command+0x1>
 516:	a0 91 8c 02 	lds	r26, 0x028C	; 0x80028c <current_command+0x2>
 51a:	b0 91 8d 02 	lds	r27, 0x028D	; 0x80028d <current_command+0x3>
 51e:	bf 93       	push	r27
 520:	af 93       	push	r26
 522:	9f 93       	push	r25
 524:	8f 93       	push	r24
 526:	8c e1       	ldi	r24, 0x1C	; 28
 528:	92 e0       	ldi	r25, 0x02	; 2
 52a:	9f 93       	push	r25
 52c:	8f 93       	push	r24
 52e:	80 e0       	ldi	r24, 0x00	; 0
 530:	92 e0       	ldi	r25, 0x02	; 2
 532:	9f 93       	push	r25
 534:	8f 93       	push	r24
 536:	17 d1       	rcall	.+558    	; 0x766 <fprintf>
	total_cycles_counter = 0;
 538:	10 92 86 02 	sts	0x0286, r1	; 0x800286 <total_cycles_counter>
 53c:	10 92 87 02 	sts	0x0287, r1	; 0x800287 <total_cycles_counter+0x1>
 540:	10 92 88 02 	sts	0x0288, r1	; 0x800288 <total_cycles_counter+0x2>
 544:	10 92 89 02 	sts	0x0289, r1	; 0x800289 <total_cycles_counter+0x3>
 548:	8d b7       	in	r24, 0x3d	; 61
 54a:	9e b7       	in	r25, 0x3e	; 62
 54c:	08 96       	adiw	r24, 0x08	; 8
 54e:	0f b6       	in	r0, 0x3f	; 63
 550:	f8 94       	cli
 552:	9e bf       	out	0x3e, r25	; 62
 554:	0f be       	out	0x3f, r0	; 63
 556:	8d bf       	out	0x3d, r24	; 61
 558:	08 95       	ret

0000055a <__vector_4>:
// 		fprintf(USART,"1s passed!\n");
// 	}
	
}

ISR(INT3_vect) {
 55a:	1f 92       	push	r1
 55c:	0f 92       	push	r0
 55e:	0f b6       	in	r0, 0x3f	; 63
 560:	0f 92       	push	r0
 562:	11 24       	eor	r1, r1
 564:	0b b6       	in	r0, 0x3b	; 59
 566:	0f 92       	push	r0
 568:	2f 93       	push	r18
 56a:	3f 93       	push	r19
 56c:	4f 93       	push	r20
 56e:	5f 93       	push	r21
 570:	6f 93       	push	r22
 572:	7f 93       	push	r23
 574:	8f 93       	push	r24
 576:	9f 93       	push	r25
 578:	af 93       	push	r26
 57a:	bf 93       	push	r27
 57c:	ef 93       	push	r30
 57e:	ff 93       	push	r31
	ir_check_timeout();
 580:	0c de       	rcall	.-1000   	; 0x19a <ir_check_timeout>

	switch (state) {
 582:	80 91 85 02 	lds	r24, 0x0285	; 0x800285 <state>
 586:	81 30       	cpi	r24, 0x01	; 1
 588:	71 f0       	breq	.+28     	; 0x5a6 <__vector_4+0x4c>
 58a:	28 f0       	brcs	.+10     	; 0x596 <__vector_4+0x3c>
 58c:	82 30       	cpi	r24, 0x02	; 2
 58e:	b9 f0       	breq	.+46     	; 0x5be <__vector_4+0x64>
 590:	83 30       	cpi	r24, 0x03	; 3
 592:	09 f1       	breq	.+66     	; 0x5d6 <__vector_4+0x7c>
 594:	22 c0       	rjmp	.+68     	; 0x5da <__vector_4+0x80>
		case STATE_WAIT:
		if (edge == EDGE_FALLING)
 596:	80 91 8f 02 	lds	r24, 0x028F	; 0x80028f <edge>
 59a:	81 11       	cpse	r24, r1
 59c:	02 c0       	rjmp	.+4      	; 0x5a2 <__vector_4+0x48>
		ir_handle_state_wait_edge_falling();
 59e:	56 de       	rcall	.-852    	; 0x24c <ir_handle_state_wait_edge_falling>
 5a0:	1d c0       	rjmp	.+58     	; 0x5dc <__vector_4+0x82>
	cycles_counter = 0;
	state = STATE_START;
}

void ir_handle_state_wait_edge_rising() {
	ir_reset();
 5a2:	c0 dd       	rcall	.-1152   	; 0x124 <ir_reset>
 5a4:	1b c0       	rjmp	.+54     	; 0x5dc <__vector_4+0x82>
		else
		ir_handle_state_wait_edge_rising();
		break;

		case STATE_START:
		if (edge == EDGE_RISING)
 5a6:	80 91 8f 02 	lds	r24, 0x028F	; 0x80028f <edge>
 5aa:	81 30       	cpi	r24, 0x01	; 1
 5ac:	11 f4       	brne	.+4      	; 0x5b2 <__vector_4+0x58>
		ir_handle_state_start_edge_rising();
 5ae:	b5 de       	rcall	.-662    	; 0x31a <ir_handle_state_start_edge_rising>
 5b0:	15 c0       	rjmp	.+42     	; 0x5dc <__vector_4+0x82>
		else if (edge == EDGE_FALLING)
 5b2:	80 91 8f 02 	lds	r24, 0x028F	; 0x80028f <edge>
 5b6:	81 11       	cpse	r24, r1
 5b8:	11 c0       	rjmp	.+34     	; 0x5dc <__vector_4+0x82>
		ir_handle_state_start_edge_falling();
 5ba:	54 de       	rcall	.-856    	; 0x264 <ir_handle_state_start_edge_falling>
 5bc:	0f c0       	rjmp	.+30     	; 0x5dc <__vector_4+0x82>
		break;

		case STATE_BITS:
		if (edge == EDGE_RISING)
 5be:	80 91 8f 02 	lds	r24, 0x028F	; 0x80028f <edge>
 5c2:	81 30       	cpi	r24, 0x01	; 1
 5c4:	11 f4       	brne	.+4      	; 0x5ca <__vector_4+0x70>
		ir_handle_state_bits_edge_rising();
 5c6:	7d df       	rcall	.-262    	; 0x4c2 <ir_handle_state_bits_edge_rising>
 5c8:	09 c0       	rjmp	.+18     	; 0x5dc <__vector_4+0x82>
		else if (edge == EDGE_FALLING)
 5ca:	80 91 8f 02 	lds	r24, 0x028F	; 0x80028f <edge>
 5ce:	81 11       	cpse	r24, r1
 5d0:	05 c0       	rjmp	.+10     	; 0x5dc <__vector_4+0x82>
		ir_handle_state_bits_edge_falling();
 5d2:	af de       	rcall	.-674    	; 0x332 <ir_handle_state_bits_edge_falling>
 5d4:	03 c0       	rjmp	.+6      	; 0x5dc <__vector_4+0x82>
		break;

		case STATE_STOP:
		ir_handle_state_stop();
 5d6:	81 df       	rcall	.-254    	; 0x4da <ir_handle_state_stop>
		break;
 5d8:	01 c0       	rjmp	.+2      	; 0x5dc <__vector_4+0x82>

		default:
		ir_reset();
 5da:	a4 dd       	rcall	.-1208   	; 0x124 <ir_reset>
	EICRA &= ~(1 << ISC30);
	edge = EDGE_FALLING;
}

void inline toggle_edge() {
	if (edge == EDGE_FALLING) {
 5dc:	80 91 8f 02 	lds	r24, 0x028F	; 0x80028f <edge>
 5e0:	81 11       	cpse	r24, r1
 5e2:	0c c0       	rjmp	.+24     	; 0x5fc <__vector_4+0xa2>
volatile uint8_t command_bits_counter;


/* Rising edge detection */
void inline check_rising_edge() {
	EICRA |= (1 << ISC31);
 5e4:	e9 e6       	ldi	r30, 0x69	; 105
 5e6:	f0 e0       	ldi	r31, 0x00	; 0
 5e8:	80 81       	ld	r24, Z
 5ea:	80 68       	ori	r24, 0x80	; 128
 5ec:	80 83       	st	Z, r24
	EICRA |= (1 << ISC30);
 5ee:	80 81       	ld	r24, Z
 5f0:	80 64       	ori	r24, 0x40	; 64
 5f2:	80 83       	st	Z, r24
	edge = EDGE_RISING;
 5f4:	81 e0       	ldi	r24, 0x01	; 1
 5f6:	80 93 8f 02 	sts	0x028F, r24	; 0x80028f <edge>
 5fa:	0e c0       	rjmp	.+28     	; 0x618 <__vector_4+0xbe>
}

void inline toggle_edge() {
	if (edge == EDGE_FALLING) {
		check_rising_edge();
		} else if (edge == EDGE_RISING) {
 5fc:	80 91 8f 02 	lds	r24, 0x028F	; 0x80028f <edge>
 600:	81 30       	cpi	r24, 0x01	; 1
 602:	51 f4       	brne	.+20     	; 0x618 <__vector_4+0xbe>
	edge = EDGE_RISING;
}

/* Falling edge detection */
void inline check_falling_edge() {
	EICRA |= (1 << ISC31);
 604:	e9 e6       	ldi	r30, 0x69	; 105
 606:	f0 e0       	ldi	r31, 0x00	; 0
 608:	80 81       	ld	r24, Z
 60a:	80 68       	ori	r24, 0x80	; 128
 60c:	80 83       	st	Z, r24
	EICRA &= ~(1 << ISC30);
 60e:	80 81       	ld	r24, Z
 610:	8f 7b       	andi	r24, 0xBF	; 191
 612:	80 83       	st	Z, r24
	edge = EDGE_FALLING;
 614:	10 92 8f 02 	sts	0x028F, r1	; 0x80028f <edge>
		break;
	}

	toggle_edge();
}
 618:	ff 91       	pop	r31
 61a:	ef 91       	pop	r30
 61c:	bf 91       	pop	r27
 61e:	af 91       	pop	r26
 620:	9f 91       	pop	r25
 622:	8f 91       	pop	r24
 624:	7f 91       	pop	r23
 626:	6f 91       	pop	r22
 628:	5f 91       	pop	r21
 62a:	4f 91       	pop	r20
 62c:	3f 91       	pop	r19
 62e:	2f 91       	pop	r18
 630:	0f 90       	pop	r0
 632:	0b be       	out	0x3b, r0	; 59
 634:	0f 90       	pop	r0
 636:	0f be       	out	0x3f, r0	; 63
 638:	0f 90       	pop	r0
 63a:	1f 90       	pop	r1
 63c:	18 95       	reti

0000063e <USART0_SETUP_9600_BAUD_ASSUME_1MHz_CLOCK>:
 63e:	82 e0       	ldi	r24, 0x02	; 2
 640:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
 644:	88 e9       	ldi	r24, 0x98	; 152
 646:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
 64a:	87 e0       	ldi	r24, 0x07	; 7
 64c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
 650:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 654:	8f ec       	ldi	r24, 0xCF	; 207
 656:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 65a:	08 95       	ret

0000065c <USART0_TX_SingleByte>:
 65c:	e0 ec       	ldi	r30, 0xC0	; 192
 65e:	f0 e0       	ldi	r31, 0x00	; 0
 660:	90 81       	ld	r25, Z
 662:	95 ff       	sbrs	r25, 5
 664:	fd cf       	rjmp	.-6      	; 0x660 <USART0_TX_SingleByte+0x4>
 666:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 66a:	08 95       	ret

0000066c <__vector_25>:
 66c:	1f 92       	push	r1
 66e:	0f 92       	push	r0
 670:	0f b6       	in	r0, 0x3f	; 63
 672:	0f 92       	push	r0
 674:	11 24       	eor	r1, r1
 676:	0f 90       	pop	r0
 678:	0f be       	out	0x3f, r0	; 63
 67a:	0f 90       	pop	r0
 67c:	1f 90       	pop	r1
 67e:	18 95       	reti

00000680 <usart_putchar_printf>:
 680:	cf 93       	push	r28
 682:	c8 2f       	mov	r28, r24
 684:	8a 30       	cpi	r24, 0x0A	; 10
 686:	11 f4       	brne	.+4      	; 0x68c <usart_putchar_printf+0xc>
 688:	8d e0       	ldi	r24, 0x0D	; 13
 68a:	e8 df       	rcall	.-48     	; 0x65c <USART0_TX_SingleByte>
 68c:	8c 2f       	mov	r24, r28
 68e:	e6 df       	rcall	.-52     	; 0x65c <USART0_TX_SingleByte>
 690:	80 e0       	ldi	r24, 0x00	; 0
 692:	90 e0       	ldi	r25, 0x00	; 0
 694:	cf 91       	pop	r28
 696:	08 95       	ret

00000698 <main>:

int main(void) {
	uint32_t current_command = 0;
	uint32_t last_command = 0;
    
	USART0_SETUP_9600_BAUD_ASSUME_1MHz_CLOCK();
 698:	d2 df       	rcall	.-92     	; 0x63e <USART0_SETUP_9600_BAUD_ASSUME_1MHz_CLOCK>

// 	PORTD = 0xFF;
// 	DDRD |= (1 << IR_PIN) | (1 << LED_RED_PIN) | (1 << LED_YELLOW_PIN) | (1 << LED_BLUE_PIN);
	ir_init();
 69a:	51 dd       	rcall	.-1374   	; 0x13e <ir_init>
	
	fprintf(USART,"Program start!\n");
 69c:	2e e0       	ldi	r18, 0x0E	; 14
 69e:	32 e0       	ldi	r19, 0x02	; 2
 6a0:	4f e0       	ldi	r20, 0x0F	; 15
 6a2:	50 e0       	ldi	r21, 0x00	; 0
 6a4:	61 e0       	ldi	r22, 0x01	; 1
 6a6:	70 e0       	ldi	r23, 0x00	; 0
 6a8:	80 e3       	ldi	r24, 0x30	; 48
 6aa:	92 e0       	ldi	r25, 0x02	; 2
 6ac:	6b d0       	rcall	.+214    	; 0x784 <fwrite>
#define LED_BLUE_SET (PORTD |= (1 << LED_BLUE_PIN))
#define LED_BLUE_CLR (PORTD &= ~(1 << LED_BLUE_PIN))

int main(void) {
	uint32_t current_command = 0;
	uint32_t last_command = 0;
 6ae:	c1 2c       	mov	r12, r1
 6b0:	d1 2c       	mov	r13, r1
 6b2:	76 01       	movw	r14, r12
 6b4:	02 c0       	rjmp	.+4      	; 0x6ba <main+0x22>
		check_falling_edge();
	}
}

uint32_t inline get_current_command() {
	return current_command;
 6b6:	6c 01       	movw	r12, r24
 6b8:	7d 01       	movw	r14, r26
 6ba:	80 91 8a 02 	lds	r24, 0x028A	; 0x80028a <current_command>
 6be:	90 91 8b 02 	lds	r25, 0x028B	; 0x80028b <current_command+0x1>
 6c2:	a0 91 8c 02 	lds	r26, 0x028C	; 0x80028c <current_command+0x2>
 6c6:	b0 91 8d 02 	lds	r27, 0x028D	; 0x80028d <current_command+0x3>
	
	fprintf(USART,"Program start!\n");
	while (1) {
		current_command = get_current_command();

		if (current_command == last_command)
 6ca:	c8 16       	cp	r12, r24
 6cc:	d9 06       	cpc	r13, r25
 6ce:	ea 06       	cpc	r14, r26
 6d0:	fb 06       	cpc	r15, r27
 6d2:	99 f3       	breq	.-26     	; 0x6ba <main+0x22>
 6d4:	6c 01       	movw	r12, r24
 6d6:	7d 01       	movw	r14, r26
		continue;

		switch (current_command) {
 6d8:	8d 3d       	cpi	r24, 0xDD	; 221
 6da:	22 e2       	ldi	r18, 0x22	; 34
 6dc:	92 07       	cpc	r25, r18
 6de:	2f ef       	ldi	r18, 0xFF	; 255
 6e0:	a2 07       	cpc	r26, r18
 6e2:	b1 05       	cpc	r27, r1
 6e4:	61 f1       	breq	.+88     	; 0x73e <main+0xa6>
 6e6:	40 f4       	brcc	.+16     	; 0x6f8 <main+0x60>
 6e8:	8d 3f       	cpi	r24, 0xFD	; 253
 6ea:	22 e0       	ldi	r18, 0x02	; 2
 6ec:	92 07       	cpc	r25, r18
 6ee:	2f ef       	ldi	r18, 0xFF	; 255
 6f0:	a2 07       	cpc	r26, r18
 6f2:	b1 05       	cpc	r27, r1
 6f4:	71 f1       	breq	.+92     	; 0x752 <main+0xba>
 6f6:	df cf       	rjmp	.-66     	; 0x6b6 <main+0x1e>
 6f8:	8d 35       	cpi	r24, 0x5D	; 93
 6fa:	22 ea       	ldi	r18, 0xA2	; 162
 6fc:	92 07       	cpc	r25, r18
 6fe:	2f ef       	ldi	r18, 0xFF	; 255
 700:	a2 07       	cpc	r26, r18
 702:	b1 05       	cpc	r27, r1
 704:	41 f0       	breq	.+16     	; 0x716 <main+0x7e>
 706:	8d 31       	cpi	r24, 0x1D	; 29
 708:	22 ee       	ldi	r18, 0xE2	; 226
 70a:	92 07       	cpc	r25, r18
 70c:	2f ef       	ldi	r18, 0xFF	; 255
 70e:	a2 07       	cpc	r26, r18
 710:	b1 05       	cpc	r27, r1
 712:	59 f0       	breq	.+22     	; 0x72a <main+0x92>
 714:	d0 cf       	rjmp	.-96     	; 0x6b6 <main+0x1e>
			case COMMAND_CH_MINUS:
			fprintf(USART,"COMMAND_CH_MINUS\n");
 716:	2e e0       	ldi	r18, 0x0E	; 14
 718:	32 e0       	ldi	r19, 0x02	; 2
 71a:	41 e1       	ldi	r20, 0x11	; 17
 71c:	50 e0       	ldi	r21, 0x00	; 0
 71e:	61 e0       	ldi	r22, 0x01	; 1
 720:	70 e0       	ldi	r23, 0x00	; 0
 722:	80 e4       	ldi	r24, 0x40	; 64
 724:	92 e0       	ldi	r25, 0x02	; 2
 726:	2e d0       	rcall	.+92     	; 0x784 <fwrite>
/*			LED_RED_CLR;*/
			break;
 728:	c8 cf       	rjmp	.-112    	; 0x6ba <main+0x22>

			case COMMAND_CH_PLUS:
			fprintf(USART,"COMMAND_CH_PLUS\n");
 72a:	2e e0       	ldi	r18, 0x0E	; 14
 72c:	32 e0       	ldi	r19, 0x02	; 2
 72e:	40 e1       	ldi	r20, 0x10	; 16
 730:	50 e0       	ldi	r21, 0x00	; 0
 732:	61 e0       	ldi	r22, 0x01	; 1
 734:	70 e0       	ldi	r23, 0x00	; 0
 736:	82 e5       	ldi	r24, 0x52	; 82
 738:	92 e0       	ldi	r25, 0x02	; 2
 73a:	24 d0       	rcall	.+72     	; 0x784 <fwrite>
/*			LED_RED_SET;*/
			break;
 73c:	be cf       	rjmp	.-132    	; 0x6ba <main+0x22>

			case COMMAND_PREV:
			fprintf(USART,"COMMAND_PREV\n");
 73e:	2e e0       	ldi	r18, 0x0E	; 14
 740:	32 e0       	ldi	r19, 0x02	; 2
 742:	4d e0       	ldi	r20, 0x0D	; 13
 744:	50 e0       	ldi	r21, 0x00	; 0
 746:	61 e0       	ldi	r22, 0x01	; 1
 748:	70 e0       	ldi	r23, 0x00	; 0
 74a:	83 e6       	ldi	r24, 0x63	; 99
 74c:	92 e0       	ldi	r25, 0x02	; 2
 74e:	1a d0       	rcall	.+52     	; 0x784 <fwrite>
/*			LED_YELLOW_CLR;*/
			break;
 750:	b4 cf       	rjmp	.-152    	; 0x6ba <main+0x22>

			case COMMAND_NEXT:
			fprintf(USART,"COMMAND_NEXT\n");
 752:	2e e0       	ldi	r18, 0x0E	; 14
 754:	32 e0       	ldi	r19, 0x02	; 2
 756:	4d e0       	ldi	r20, 0x0D	; 13
 758:	50 e0       	ldi	r21, 0x00	; 0
 75a:	61 e0       	ldi	r22, 0x01	; 1
 75c:	70 e0       	ldi	r23, 0x00	; 0
 75e:	81 e7       	ldi	r24, 0x71	; 113
 760:	92 e0       	ldi	r25, 0x02	; 2
 762:	10 d0       	rcall	.+32     	; 0x784 <fwrite>
/*			LED_YELLOW_SET;*/
			break;
 764:	aa cf       	rjmp	.-172    	; 0x6ba <main+0x22>

00000766 <fprintf>:
 766:	cf 93       	push	r28
 768:	df 93       	push	r29
 76a:	cd b7       	in	r28, 0x3d	; 61
 76c:	de b7       	in	r29, 0x3e	; 62
 76e:	ae 01       	movw	r20, r28
 770:	46 5f       	subi	r20, 0xF6	; 246
 772:	5f 4f       	sbci	r21, 0xFF	; 255
 774:	68 85       	ldd	r22, Y+8	; 0x08
 776:	79 85       	ldd	r23, Y+9	; 0x09
 778:	8e 81       	ldd	r24, Y+6	; 0x06
 77a:	9f 81       	ldd	r25, Y+7	; 0x07
 77c:	45 d0       	rcall	.+138    	; 0x808 <vfprintf>
 77e:	df 91       	pop	r29
 780:	cf 91       	pop	r28
 782:	08 95       	ret

00000784 <fwrite>:
 784:	8f 92       	push	r8
 786:	9f 92       	push	r9
 788:	af 92       	push	r10
 78a:	bf 92       	push	r11
 78c:	cf 92       	push	r12
 78e:	df 92       	push	r13
 790:	ef 92       	push	r14
 792:	ff 92       	push	r15
 794:	0f 93       	push	r16
 796:	1f 93       	push	r17
 798:	cf 93       	push	r28
 79a:	df 93       	push	r29
 79c:	5b 01       	movw	r10, r22
 79e:	4a 01       	movw	r8, r20
 7a0:	79 01       	movw	r14, r18
 7a2:	d9 01       	movw	r26, r18
 7a4:	13 96       	adiw	r26, 0x03	; 3
 7a6:	2c 91       	ld	r18, X
 7a8:	21 ff       	sbrs	r18, 1
 7aa:	1d c0       	rjmp	.+58     	; 0x7e6 <fwrite+0x62>
 7ac:	c0 e0       	ldi	r28, 0x00	; 0
 7ae:	d0 e0       	ldi	r29, 0x00	; 0
 7b0:	c8 15       	cp	r28, r8
 7b2:	d9 05       	cpc	r29, r9
 7b4:	d9 f0       	breq	.+54     	; 0x7ec <fwrite+0x68>
 7b6:	8c 01       	movw	r16, r24
 7b8:	6c 01       	movw	r12, r24
 7ba:	ca 0c       	add	r12, r10
 7bc:	db 1c       	adc	r13, r11
 7be:	c8 01       	movw	r24, r16
 7c0:	0c 15       	cp	r16, r12
 7c2:	1d 05       	cpc	r17, r13
 7c4:	71 f0       	breq	.+28     	; 0x7e2 <fwrite+0x5e>
 7c6:	0f 5f       	subi	r16, 0xFF	; 255
 7c8:	1f 4f       	sbci	r17, 0xFF	; 255
 7ca:	d7 01       	movw	r26, r14
 7cc:	18 96       	adiw	r26, 0x08	; 8
 7ce:	ed 91       	ld	r30, X+
 7d0:	fc 91       	ld	r31, X
 7d2:	19 97       	sbiw	r26, 0x09	; 9
 7d4:	b7 01       	movw	r22, r14
 7d6:	dc 01       	movw	r26, r24
 7d8:	8c 91       	ld	r24, X
 7da:	19 95       	eicall
 7dc:	89 2b       	or	r24, r25
 7de:	79 f3       	breq	.-34     	; 0x7be <fwrite+0x3a>
 7e0:	05 c0       	rjmp	.+10     	; 0x7ec <fwrite+0x68>
 7e2:	21 96       	adiw	r28, 0x01	; 1
 7e4:	e5 cf       	rjmp	.-54     	; 0x7b0 <fwrite+0x2c>
 7e6:	80 e0       	ldi	r24, 0x00	; 0
 7e8:	90 e0       	ldi	r25, 0x00	; 0
 7ea:	01 c0       	rjmp	.+2      	; 0x7ee <fwrite+0x6a>
 7ec:	ce 01       	movw	r24, r28
 7ee:	df 91       	pop	r29
 7f0:	cf 91       	pop	r28
 7f2:	1f 91       	pop	r17
 7f4:	0f 91       	pop	r16
 7f6:	ff 90       	pop	r15
 7f8:	ef 90       	pop	r14
 7fa:	df 90       	pop	r13
 7fc:	cf 90       	pop	r12
 7fe:	bf 90       	pop	r11
 800:	af 90       	pop	r10
 802:	9f 90       	pop	r9
 804:	8f 90       	pop	r8
 806:	08 95       	ret

00000808 <vfprintf>:
 808:	2f 92       	push	r2
 80a:	3f 92       	push	r3
 80c:	4f 92       	push	r4
 80e:	5f 92       	push	r5
 810:	6f 92       	push	r6
 812:	7f 92       	push	r7
 814:	8f 92       	push	r8
 816:	9f 92       	push	r9
 818:	af 92       	push	r10
 81a:	bf 92       	push	r11
 81c:	cf 92       	push	r12
 81e:	df 92       	push	r13
 820:	ef 92       	push	r14
 822:	ff 92       	push	r15
 824:	0f 93       	push	r16
 826:	1f 93       	push	r17
 828:	cf 93       	push	r28
 82a:	df 93       	push	r29
 82c:	cd b7       	in	r28, 0x3d	; 61
 82e:	de b7       	in	r29, 0x3e	; 62
 830:	2c 97       	sbiw	r28, 0x0c	; 12
 832:	0f b6       	in	r0, 0x3f	; 63
 834:	f8 94       	cli
 836:	de bf       	out	0x3e, r29	; 62
 838:	0f be       	out	0x3f, r0	; 63
 83a:	cd bf       	out	0x3d, r28	; 61
 83c:	7c 01       	movw	r14, r24
 83e:	6b 01       	movw	r12, r22
 840:	8a 01       	movw	r16, r20
 842:	fc 01       	movw	r30, r24
 844:	17 82       	std	Z+7, r1	; 0x07
 846:	16 82       	std	Z+6, r1	; 0x06
 848:	83 81       	ldd	r24, Z+3	; 0x03
 84a:	81 ff       	sbrs	r24, 1
 84c:	b0 c1       	rjmp	.+864    	; 0xbae <vfprintf+0x3a6>
 84e:	ce 01       	movw	r24, r28
 850:	01 96       	adiw	r24, 0x01	; 1
 852:	4c 01       	movw	r8, r24
 854:	f7 01       	movw	r30, r14
 856:	93 81       	ldd	r25, Z+3	; 0x03
 858:	f6 01       	movw	r30, r12
 85a:	93 fd       	sbrc	r25, 3
 85c:	85 91       	lpm	r24, Z+
 85e:	93 ff       	sbrs	r25, 3
 860:	81 91       	ld	r24, Z+
 862:	6f 01       	movw	r12, r30
 864:	88 23       	and	r24, r24
 866:	09 f4       	brne	.+2      	; 0x86a <vfprintf+0x62>
 868:	9e c1       	rjmp	.+828    	; 0xba6 <vfprintf+0x39e>
 86a:	85 32       	cpi	r24, 0x25	; 37
 86c:	39 f4       	brne	.+14     	; 0x87c <vfprintf+0x74>
 86e:	93 fd       	sbrc	r25, 3
 870:	85 91       	lpm	r24, Z+
 872:	93 ff       	sbrs	r25, 3
 874:	81 91       	ld	r24, Z+
 876:	6f 01       	movw	r12, r30
 878:	85 32       	cpi	r24, 0x25	; 37
 87a:	21 f4       	brne	.+8      	; 0x884 <vfprintf+0x7c>
 87c:	b7 01       	movw	r22, r14
 87e:	90 e0       	ldi	r25, 0x00	; 0
 880:	c7 d1       	rcall	.+910    	; 0xc10 <fputc>
 882:	e8 cf       	rjmp	.-48     	; 0x854 <vfprintf+0x4c>
 884:	51 2c       	mov	r5, r1
 886:	31 2c       	mov	r3, r1
 888:	20 e0       	ldi	r18, 0x00	; 0
 88a:	20 32       	cpi	r18, 0x20	; 32
 88c:	a0 f4       	brcc	.+40     	; 0x8b6 <vfprintf+0xae>
 88e:	8b 32       	cpi	r24, 0x2B	; 43
 890:	69 f0       	breq	.+26     	; 0x8ac <vfprintf+0xa4>
 892:	30 f4       	brcc	.+12     	; 0x8a0 <vfprintf+0x98>
 894:	80 32       	cpi	r24, 0x20	; 32
 896:	59 f0       	breq	.+22     	; 0x8ae <vfprintf+0xa6>
 898:	83 32       	cpi	r24, 0x23	; 35
 89a:	69 f4       	brne	.+26     	; 0x8b6 <vfprintf+0xae>
 89c:	20 61       	ori	r18, 0x10	; 16
 89e:	2c c0       	rjmp	.+88     	; 0x8f8 <vfprintf+0xf0>
 8a0:	8d 32       	cpi	r24, 0x2D	; 45
 8a2:	39 f0       	breq	.+14     	; 0x8b2 <vfprintf+0xaa>
 8a4:	80 33       	cpi	r24, 0x30	; 48
 8a6:	39 f4       	brne	.+14     	; 0x8b6 <vfprintf+0xae>
 8a8:	21 60       	ori	r18, 0x01	; 1
 8aa:	26 c0       	rjmp	.+76     	; 0x8f8 <vfprintf+0xf0>
 8ac:	22 60       	ori	r18, 0x02	; 2
 8ae:	24 60       	ori	r18, 0x04	; 4
 8b0:	23 c0       	rjmp	.+70     	; 0x8f8 <vfprintf+0xf0>
 8b2:	28 60       	ori	r18, 0x08	; 8
 8b4:	21 c0       	rjmp	.+66     	; 0x8f8 <vfprintf+0xf0>
 8b6:	27 fd       	sbrc	r18, 7
 8b8:	27 c0       	rjmp	.+78     	; 0x908 <vfprintf+0x100>
 8ba:	30 ed       	ldi	r19, 0xD0	; 208
 8bc:	38 0f       	add	r19, r24
 8be:	3a 30       	cpi	r19, 0x0A	; 10
 8c0:	78 f4       	brcc	.+30     	; 0x8e0 <vfprintf+0xd8>
 8c2:	26 ff       	sbrs	r18, 6
 8c4:	06 c0       	rjmp	.+12     	; 0x8d2 <vfprintf+0xca>
 8c6:	fa e0       	ldi	r31, 0x0A	; 10
 8c8:	5f 9e       	mul	r5, r31
 8ca:	30 0d       	add	r19, r0
 8cc:	11 24       	eor	r1, r1
 8ce:	53 2e       	mov	r5, r19
 8d0:	13 c0       	rjmp	.+38     	; 0x8f8 <vfprintf+0xf0>
 8d2:	8a e0       	ldi	r24, 0x0A	; 10
 8d4:	38 9e       	mul	r3, r24
 8d6:	30 0d       	add	r19, r0
 8d8:	11 24       	eor	r1, r1
 8da:	33 2e       	mov	r3, r19
 8dc:	20 62       	ori	r18, 0x20	; 32
 8de:	0c c0       	rjmp	.+24     	; 0x8f8 <vfprintf+0xf0>
 8e0:	8e 32       	cpi	r24, 0x2E	; 46
 8e2:	21 f4       	brne	.+8      	; 0x8ec <vfprintf+0xe4>
 8e4:	26 fd       	sbrc	r18, 6
 8e6:	5f c1       	rjmp	.+702    	; 0xba6 <vfprintf+0x39e>
 8e8:	20 64       	ori	r18, 0x40	; 64
 8ea:	06 c0       	rjmp	.+12     	; 0x8f8 <vfprintf+0xf0>
 8ec:	8c 36       	cpi	r24, 0x6C	; 108
 8ee:	11 f4       	brne	.+4      	; 0x8f4 <vfprintf+0xec>
 8f0:	20 68       	ori	r18, 0x80	; 128
 8f2:	02 c0       	rjmp	.+4      	; 0x8f8 <vfprintf+0xf0>
 8f4:	88 36       	cpi	r24, 0x68	; 104
 8f6:	41 f4       	brne	.+16     	; 0x908 <vfprintf+0x100>
 8f8:	f6 01       	movw	r30, r12
 8fa:	93 fd       	sbrc	r25, 3
 8fc:	85 91       	lpm	r24, Z+
 8fe:	93 ff       	sbrs	r25, 3
 900:	81 91       	ld	r24, Z+
 902:	6f 01       	movw	r12, r30
 904:	81 11       	cpse	r24, r1
 906:	c1 cf       	rjmp	.-126    	; 0x88a <vfprintf+0x82>
 908:	98 2f       	mov	r25, r24
 90a:	9f 7d       	andi	r25, 0xDF	; 223
 90c:	95 54       	subi	r25, 0x45	; 69
 90e:	93 30       	cpi	r25, 0x03	; 3
 910:	28 f4       	brcc	.+10     	; 0x91c <vfprintf+0x114>
 912:	0c 5f       	subi	r16, 0xFC	; 252
 914:	1f 4f       	sbci	r17, 0xFF	; 255
 916:	ff e3       	ldi	r31, 0x3F	; 63
 918:	f9 83       	std	Y+1, r31	; 0x01
 91a:	0d c0       	rjmp	.+26     	; 0x936 <vfprintf+0x12e>
 91c:	83 36       	cpi	r24, 0x63	; 99
 91e:	31 f0       	breq	.+12     	; 0x92c <vfprintf+0x124>
 920:	83 37       	cpi	r24, 0x73	; 115
 922:	71 f0       	breq	.+28     	; 0x940 <vfprintf+0x138>
 924:	83 35       	cpi	r24, 0x53	; 83
 926:	09 f0       	breq	.+2      	; 0x92a <vfprintf+0x122>
 928:	57 c0       	rjmp	.+174    	; 0x9d8 <vfprintf+0x1d0>
 92a:	21 c0       	rjmp	.+66     	; 0x96e <vfprintf+0x166>
 92c:	f8 01       	movw	r30, r16
 92e:	80 81       	ld	r24, Z
 930:	89 83       	std	Y+1, r24	; 0x01
 932:	0e 5f       	subi	r16, 0xFE	; 254
 934:	1f 4f       	sbci	r17, 0xFF	; 255
 936:	44 24       	eor	r4, r4
 938:	43 94       	inc	r4
 93a:	51 2c       	mov	r5, r1
 93c:	54 01       	movw	r10, r8
 93e:	14 c0       	rjmp	.+40     	; 0x968 <vfprintf+0x160>
 940:	38 01       	movw	r6, r16
 942:	f2 e0       	ldi	r31, 0x02	; 2
 944:	6f 0e       	add	r6, r31
 946:	71 1c       	adc	r7, r1
 948:	f8 01       	movw	r30, r16
 94a:	a0 80       	ld	r10, Z
 94c:	b1 80       	ldd	r11, Z+1	; 0x01
 94e:	26 ff       	sbrs	r18, 6
 950:	03 c0       	rjmp	.+6      	; 0x958 <vfprintf+0x150>
 952:	65 2d       	mov	r22, r5
 954:	70 e0       	ldi	r23, 0x00	; 0
 956:	02 c0       	rjmp	.+4      	; 0x95c <vfprintf+0x154>
 958:	6f ef       	ldi	r22, 0xFF	; 255
 95a:	7f ef       	ldi	r23, 0xFF	; 255
 95c:	c5 01       	movw	r24, r10
 95e:	2c 87       	std	Y+12, r18	; 0x0c
 960:	4c d1       	rcall	.+664    	; 0xbfa <strnlen>
 962:	2c 01       	movw	r4, r24
 964:	83 01       	movw	r16, r6
 966:	2c 85       	ldd	r18, Y+12	; 0x0c
 968:	2f 77       	andi	r18, 0x7F	; 127
 96a:	22 2e       	mov	r2, r18
 96c:	16 c0       	rjmp	.+44     	; 0x99a <vfprintf+0x192>
 96e:	38 01       	movw	r6, r16
 970:	f2 e0       	ldi	r31, 0x02	; 2
 972:	6f 0e       	add	r6, r31
 974:	71 1c       	adc	r7, r1
 976:	f8 01       	movw	r30, r16
 978:	a0 80       	ld	r10, Z
 97a:	b1 80       	ldd	r11, Z+1	; 0x01
 97c:	26 ff       	sbrs	r18, 6
 97e:	03 c0       	rjmp	.+6      	; 0x986 <vfprintf+0x17e>
 980:	65 2d       	mov	r22, r5
 982:	70 e0       	ldi	r23, 0x00	; 0
 984:	02 c0       	rjmp	.+4      	; 0x98a <vfprintf+0x182>
 986:	6f ef       	ldi	r22, 0xFF	; 255
 988:	7f ef       	ldi	r23, 0xFF	; 255
 98a:	c5 01       	movw	r24, r10
 98c:	2c 87       	std	Y+12, r18	; 0x0c
 98e:	2a d1       	rcall	.+596    	; 0xbe4 <strnlen_P>
 990:	2c 01       	movw	r4, r24
 992:	2c 85       	ldd	r18, Y+12	; 0x0c
 994:	20 68       	ori	r18, 0x80	; 128
 996:	22 2e       	mov	r2, r18
 998:	83 01       	movw	r16, r6
 99a:	23 fc       	sbrc	r2, 3
 99c:	19 c0       	rjmp	.+50     	; 0x9d0 <vfprintf+0x1c8>
 99e:	83 2d       	mov	r24, r3
 9a0:	90 e0       	ldi	r25, 0x00	; 0
 9a2:	48 16       	cp	r4, r24
 9a4:	59 06       	cpc	r5, r25
 9a6:	a0 f4       	brcc	.+40     	; 0x9d0 <vfprintf+0x1c8>
 9a8:	b7 01       	movw	r22, r14
 9aa:	80 e2       	ldi	r24, 0x20	; 32
 9ac:	90 e0       	ldi	r25, 0x00	; 0
 9ae:	30 d1       	rcall	.+608    	; 0xc10 <fputc>
 9b0:	3a 94       	dec	r3
 9b2:	f5 cf       	rjmp	.-22     	; 0x99e <vfprintf+0x196>
 9b4:	f5 01       	movw	r30, r10
 9b6:	27 fc       	sbrc	r2, 7
 9b8:	85 91       	lpm	r24, Z+
 9ba:	27 fe       	sbrs	r2, 7
 9bc:	81 91       	ld	r24, Z+
 9be:	5f 01       	movw	r10, r30
 9c0:	b7 01       	movw	r22, r14
 9c2:	90 e0       	ldi	r25, 0x00	; 0
 9c4:	25 d1       	rcall	.+586    	; 0xc10 <fputc>
 9c6:	31 10       	cpse	r3, r1
 9c8:	3a 94       	dec	r3
 9ca:	f1 e0       	ldi	r31, 0x01	; 1
 9cc:	4f 1a       	sub	r4, r31
 9ce:	51 08       	sbc	r5, r1
 9d0:	41 14       	cp	r4, r1
 9d2:	51 04       	cpc	r5, r1
 9d4:	79 f7       	brne	.-34     	; 0x9b4 <vfprintf+0x1ac>
 9d6:	de c0       	rjmp	.+444    	; 0xb94 <vfprintf+0x38c>
 9d8:	84 36       	cpi	r24, 0x64	; 100
 9da:	11 f0       	breq	.+4      	; 0x9e0 <vfprintf+0x1d8>
 9dc:	89 36       	cpi	r24, 0x69	; 105
 9de:	31 f5       	brne	.+76     	; 0xa2c <vfprintf+0x224>
 9e0:	f8 01       	movw	r30, r16
 9e2:	27 ff       	sbrs	r18, 7
 9e4:	07 c0       	rjmp	.+14     	; 0x9f4 <vfprintf+0x1ec>
 9e6:	60 81       	ld	r22, Z
 9e8:	71 81       	ldd	r23, Z+1	; 0x01
 9ea:	82 81       	ldd	r24, Z+2	; 0x02
 9ec:	93 81       	ldd	r25, Z+3	; 0x03
 9ee:	0c 5f       	subi	r16, 0xFC	; 252
 9f0:	1f 4f       	sbci	r17, 0xFF	; 255
 9f2:	08 c0       	rjmp	.+16     	; 0xa04 <vfprintf+0x1fc>
 9f4:	60 81       	ld	r22, Z
 9f6:	71 81       	ldd	r23, Z+1	; 0x01
 9f8:	07 2e       	mov	r0, r23
 9fa:	00 0c       	add	r0, r0
 9fc:	88 0b       	sbc	r24, r24
 9fe:	99 0b       	sbc	r25, r25
 a00:	0e 5f       	subi	r16, 0xFE	; 254
 a02:	1f 4f       	sbci	r17, 0xFF	; 255
 a04:	2f 76       	andi	r18, 0x6F	; 111
 a06:	72 2e       	mov	r7, r18
 a08:	97 ff       	sbrs	r25, 7
 a0a:	09 c0       	rjmp	.+18     	; 0xa1e <vfprintf+0x216>
 a0c:	90 95       	com	r25
 a0e:	80 95       	com	r24
 a10:	70 95       	com	r23
 a12:	61 95       	neg	r22
 a14:	7f 4f       	sbci	r23, 0xFF	; 255
 a16:	8f 4f       	sbci	r24, 0xFF	; 255
 a18:	9f 4f       	sbci	r25, 0xFF	; 255
 a1a:	20 68       	ori	r18, 0x80	; 128
 a1c:	72 2e       	mov	r7, r18
 a1e:	2a e0       	ldi	r18, 0x0A	; 10
 a20:	30 e0       	ldi	r19, 0x00	; 0
 a22:	a4 01       	movw	r20, r8
 a24:	2d d1       	rcall	.+602    	; 0xc80 <__ultoa_invert>
 a26:	a8 2e       	mov	r10, r24
 a28:	a8 18       	sub	r10, r8
 a2a:	43 c0       	rjmp	.+134    	; 0xab2 <vfprintf+0x2aa>
 a2c:	85 37       	cpi	r24, 0x75	; 117
 a2e:	29 f4       	brne	.+10     	; 0xa3a <vfprintf+0x232>
 a30:	2f 7e       	andi	r18, 0xEF	; 239
 a32:	b2 2e       	mov	r11, r18
 a34:	2a e0       	ldi	r18, 0x0A	; 10
 a36:	30 e0       	ldi	r19, 0x00	; 0
 a38:	25 c0       	rjmp	.+74     	; 0xa84 <vfprintf+0x27c>
 a3a:	f2 2f       	mov	r31, r18
 a3c:	f9 7f       	andi	r31, 0xF9	; 249
 a3e:	bf 2e       	mov	r11, r31
 a40:	8f 36       	cpi	r24, 0x6F	; 111
 a42:	c1 f0       	breq	.+48     	; 0xa74 <vfprintf+0x26c>
 a44:	18 f4       	brcc	.+6      	; 0xa4c <vfprintf+0x244>
 a46:	88 35       	cpi	r24, 0x58	; 88
 a48:	79 f0       	breq	.+30     	; 0xa68 <vfprintf+0x260>
 a4a:	ad c0       	rjmp	.+346    	; 0xba6 <vfprintf+0x39e>
 a4c:	80 37       	cpi	r24, 0x70	; 112
 a4e:	19 f0       	breq	.+6      	; 0xa56 <vfprintf+0x24e>
 a50:	88 37       	cpi	r24, 0x78	; 120
 a52:	21 f0       	breq	.+8      	; 0xa5c <vfprintf+0x254>
 a54:	a8 c0       	rjmp	.+336    	; 0xba6 <vfprintf+0x39e>
 a56:	2f 2f       	mov	r18, r31
 a58:	20 61       	ori	r18, 0x10	; 16
 a5a:	b2 2e       	mov	r11, r18
 a5c:	b4 fe       	sbrs	r11, 4
 a5e:	0d c0       	rjmp	.+26     	; 0xa7a <vfprintf+0x272>
 a60:	8b 2d       	mov	r24, r11
 a62:	84 60       	ori	r24, 0x04	; 4
 a64:	b8 2e       	mov	r11, r24
 a66:	09 c0       	rjmp	.+18     	; 0xa7a <vfprintf+0x272>
 a68:	24 ff       	sbrs	r18, 4
 a6a:	0a c0       	rjmp	.+20     	; 0xa80 <vfprintf+0x278>
 a6c:	9f 2f       	mov	r25, r31
 a6e:	96 60       	ori	r25, 0x06	; 6
 a70:	b9 2e       	mov	r11, r25
 a72:	06 c0       	rjmp	.+12     	; 0xa80 <vfprintf+0x278>
 a74:	28 e0       	ldi	r18, 0x08	; 8
 a76:	30 e0       	ldi	r19, 0x00	; 0
 a78:	05 c0       	rjmp	.+10     	; 0xa84 <vfprintf+0x27c>
 a7a:	20 e1       	ldi	r18, 0x10	; 16
 a7c:	30 e0       	ldi	r19, 0x00	; 0
 a7e:	02 c0       	rjmp	.+4      	; 0xa84 <vfprintf+0x27c>
 a80:	20 e1       	ldi	r18, 0x10	; 16
 a82:	32 e0       	ldi	r19, 0x02	; 2
 a84:	f8 01       	movw	r30, r16
 a86:	b7 fe       	sbrs	r11, 7
 a88:	07 c0       	rjmp	.+14     	; 0xa98 <vfprintf+0x290>
 a8a:	60 81       	ld	r22, Z
 a8c:	71 81       	ldd	r23, Z+1	; 0x01
 a8e:	82 81       	ldd	r24, Z+2	; 0x02
 a90:	93 81       	ldd	r25, Z+3	; 0x03
 a92:	0c 5f       	subi	r16, 0xFC	; 252
 a94:	1f 4f       	sbci	r17, 0xFF	; 255
 a96:	06 c0       	rjmp	.+12     	; 0xaa4 <vfprintf+0x29c>
 a98:	60 81       	ld	r22, Z
 a9a:	71 81       	ldd	r23, Z+1	; 0x01
 a9c:	80 e0       	ldi	r24, 0x00	; 0
 a9e:	90 e0       	ldi	r25, 0x00	; 0
 aa0:	0e 5f       	subi	r16, 0xFE	; 254
 aa2:	1f 4f       	sbci	r17, 0xFF	; 255
 aa4:	a4 01       	movw	r20, r8
 aa6:	ec d0       	rcall	.+472    	; 0xc80 <__ultoa_invert>
 aa8:	a8 2e       	mov	r10, r24
 aaa:	a8 18       	sub	r10, r8
 aac:	fb 2d       	mov	r31, r11
 aae:	ff 77       	andi	r31, 0x7F	; 127
 ab0:	7f 2e       	mov	r7, r31
 ab2:	76 fe       	sbrs	r7, 6
 ab4:	0b c0       	rjmp	.+22     	; 0xacc <vfprintf+0x2c4>
 ab6:	37 2d       	mov	r19, r7
 ab8:	3e 7f       	andi	r19, 0xFE	; 254
 aba:	a5 14       	cp	r10, r5
 abc:	50 f4       	brcc	.+20     	; 0xad2 <vfprintf+0x2ca>
 abe:	74 fe       	sbrs	r7, 4
 ac0:	0a c0       	rjmp	.+20     	; 0xad6 <vfprintf+0x2ce>
 ac2:	72 fc       	sbrc	r7, 2
 ac4:	08 c0       	rjmp	.+16     	; 0xad6 <vfprintf+0x2ce>
 ac6:	37 2d       	mov	r19, r7
 ac8:	3e 7e       	andi	r19, 0xEE	; 238
 aca:	05 c0       	rjmp	.+10     	; 0xad6 <vfprintf+0x2ce>
 acc:	ba 2c       	mov	r11, r10
 ace:	37 2d       	mov	r19, r7
 ad0:	03 c0       	rjmp	.+6      	; 0xad8 <vfprintf+0x2d0>
 ad2:	ba 2c       	mov	r11, r10
 ad4:	01 c0       	rjmp	.+2      	; 0xad8 <vfprintf+0x2d0>
 ad6:	b5 2c       	mov	r11, r5
 ad8:	34 ff       	sbrs	r19, 4
 ada:	0d c0       	rjmp	.+26     	; 0xaf6 <vfprintf+0x2ee>
 adc:	fe 01       	movw	r30, r28
 ade:	ea 0d       	add	r30, r10
 ae0:	f1 1d       	adc	r31, r1
 ae2:	80 81       	ld	r24, Z
 ae4:	80 33       	cpi	r24, 0x30	; 48
 ae6:	11 f4       	brne	.+4      	; 0xaec <vfprintf+0x2e4>
 ae8:	39 7e       	andi	r19, 0xE9	; 233
 aea:	09 c0       	rjmp	.+18     	; 0xafe <vfprintf+0x2f6>
 aec:	32 ff       	sbrs	r19, 2
 aee:	06 c0       	rjmp	.+12     	; 0xafc <vfprintf+0x2f4>
 af0:	b3 94       	inc	r11
 af2:	b3 94       	inc	r11
 af4:	04 c0       	rjmp	.+8      	; 0xafe <vfprintf+0x2f6>
 af6:	83 2f       	mov	r24, r19
 af8:	86 78       	andi	r24, 0x86	; 134
 afa:	09 f0       	breq	.+2      	; 0xafe <vfprintf+0x2f6>
 afc:	b3 94       	inc	r11
 afe:	33 fd       	sbrc	r19, 3
 b00:	12 c0       	rjmp	.+36     	; 0xb26 <vfprintf+0x31e>
 b02:	30 ff       	sbrs	r19, 0
 b04:	06 c0       	rjmp	.+12     	; 0xb12 <vfprintf+0x30a>
 b06:	5a 2c       	mov	r5, r10
 b08:	b3 14       	cp	r11, r3
 b0a:	18 f4       	brcc	.+6      	; 0xb12 <vfprintf+0x30a>
 b0c:	53 0c       	add	r5, r3
 b0e:	5b 18       	sub	r5, r11
 b10:	b3 2c       	mov	r11, r3
 b12:	b3 14       	cp	r11, r3
 b14:	60 f4       	brcc	.+24     	; 0xb2e <vfprintf+0x326>
 b16:	b7 01       	movw	r22, r14
 b18:	80 e2       	ldi	r24, 0x20	; 32
 b1a:	90 e0       	ldi	r25, 0x00	; 0
 b1c:	3c 87       	std	Y+12, r19	; 0x0c
 b1e:	78 d0       	rcall	.+240    	; 0xc10 <fputc>
 b20:	b3 94       	inc	r11
 b22:	3c 85       	ldd	r19, Y+12	; 0x0c
 b24:	f6 cf       	rjmp	.-20     	; 0xb12 <vfprintf+0x30a>
 b26:	b3 14       	cp	r11, r3
 b28:	10 f4       	brcc	.+4      	; 0xb2e <vfprintf+0x326>
 b2a:	3b 18       	sub	r3, r11
 b2c:	01 c0       	rjmp	.+2      	; 0xb30 <vfprintf+0x328>
 b2e:	31 2c       	mov	r3, r1
 b30:	34 ff       	sbrs	r19, 4
 b32:	11 c0       	rjmp	.+34     	; 0xb56 <vfprintf+0x34e>
 b34:	b7 01       	movw	r22, r14
 b36:	80 e3       	ldi	r24, 0x30	; 48
 b38:	90 e0       	ldi	r25, 0x00	; 0
 b3a:	3c 87       	std	Y+12, r19	; 0x0c
 b3c:	69 d0       	rcall	.+210    	; 0xc10 <fputc>
 b3e:	3c 85       	ldd	r19, Y+12	; 0x0c
 b40:	32 ff       	sbrs	r19, 2
 b42:	16 c0       	rjmp	.+44     	; 0xb70 <vfprintf+0x368>
 b44:	31 fd       	sbrc	r19, 1
 b46:	03 c0       	rjmp	.+6      	; 0xb4e <vfprintf+0x346>
 b48:	88 e7       	ldi	r24, 0x78	; 120
 b4a:	90 e0       	ldi	r25, 0x00	; 0
 b4c:	02 c0       	rjmp	.+4      	; 0xb52 <vfprintf+0x34a>
 b4e:	88 e5       	ldi	r24, 0x58	; 88
 b50:	90 e0       	ldi	r25, 0x00	; 0
 b52:	b7 01       	movw	r22, r14
 b54:	0c c0       	rjmp	.+24     	; 0xb6e <vfprintf+0x366>
 b56:	83 2f       	mov	r24, r19
 b58:	86 78       	andi	r24, 0x86	; 134
 b5a:	51 f0       	breq	.+20     	; 0xb70 <vfprintf+0x368>
 b5c:	31 ff       	sbrs	r19, 1
 b5e:	02 c0       	rjmp	.+4      	; 0xb64 <vfprintf+0x35c>
 b60:	8b e2       	ldi	r24, 0x2B	; 43
 b62:	01 c0       	rjmp	.+2      	; 0xb66 <vfprintf+0x35e>
 b64:	80 e2       	ldi	r24, 0x20	; 32
 b66:	37 fd       	sbrc	r19, 7
 b68:	8d e2       	ldi	r24, 0x2D	; 45
 b6a:	b7 01       	movw	r22, r14
 b6c:	90 e0       	ldi	r25, 0x00	; 0
 b6e:	50 d0       	rcall	.+160    	; 0xc10 <fputc>
 b70:	a5 14       	cp	r10, r5
 b72:	30 f4       	brcc	.+12     	; 0xb80 <vfprintf+0x378>
 b74:	b7 01       	movw	r22, r14
 b76:	80 e3       	ldi	r24, 0x30	; 48
 b78:	90 e0       	ldi	r25, 0x00	; 0
 b7a:	4a d0       	rcall	.+148    	; 0xc10 <fputc>
 b7c:	5a 94       	dec	r5
 b7e:	f8 cf       	rjmp	.-16     	; 0xb70 <vfprintf+0x368>
 b80:	aa 94       	dec	r10
 b82:	f4 01       	movw	r30, r8
 b84:	ea 0d       	add	r30, r10
 b86:	f1 1d       	adc	r31, r1
 b88:	80 81       	ld	r24, Z
 b8a:	b7 01       	movw	r22, r14
 b8c:	90 e0       	ldi	r25, 0x00	; 0
 b8e:	40 d0       	rcall	.+128    	; 0xc10 <fputc>
 b90:	a1 10       	cpse	r10, r1
 b92:	f6 cf       	rjmp	.-20     	; 0xb80 <vfprintf+0x378>
 b94:	33 20       	and	r3, r3
 b96:	09 f4       	brne	.+2      	; 0xb9a <vfprintf+0x392>
 b98:	5d ce       	rjmp	.-838    	; 0x854 <vfprintf+0x4c>
 b9a:	b7 01       	movw	r22, r14
 b9c:	80 e2       	ldi	r24, 0x20	; 32
 b9e:	90 e0       	ldi	r25, 0x00	; 0
 ba0:	37 d0       	rcall	.+110    	; 0xc10 <fputc>
 ba2:	3a 94       	dec	r3
 ba4:	f7 cf       	rjmp	.-18     	; 0xb94 <vfprintf+0x38c>
 ba6:	f7 01       	movw	r30, r14
 ba8:	86 81       	ldd	r24, Z+6	; 0x06
 baa:	97 81       	ldd	r25, Z+7	; 0x07
 bac:	02 c0       	rjmp	.+4      	; 0xbb2 <vfprintf+0x3aa>
 bae:	8f ef       	ldi	r24, 0xFF	; 255
 bb0:	9f ef       	ldi	r25, 0xFF	; 255
 bb2:	2c 96       	adiw	r28, 0x0c	; 12
 bb4:	0f b6       	in	r0, 0x3f	; 63
 bb6:	f8 94       	cli
 bb8:	de bf       	out	0x3e, r29	; 62
 bba:	0f be       	out	0x3f, r0	; 63
 bbc:	cd bf       	out	0x3d, r28	; 61
 bbe:	df 91       	pop	r29
 bc0:	cf 91       	pop	r28
 bc2:	1f 91       	pop	r17
 bc4:	0f 91       	pop	r16
 bc6:	ff 90       	pop	r15
 bc8:	ef 90       	pop	r14
 bca:	df 90       	pop	r13
 bcc:	cf 90       	pop	r12
 bce:	bf 90       	pop	r11
 bd0:	af 90       	pop	r10
 bd2:	9f 90       	pop	r9
 bd4:	8f 90       	pop	r8
 bd6:	7f 90       	pop	r7
 bd8:	6f 90       	pop	r6
 bda:	5f 90       	pop	r5
 bdc:	4f 90       	pop	r4
 bde:	3f 90       	pop	r3
 be0:	2f 90       	pop	r2
 be2:	08 95       	ret

00000be4 <strnlen_P>:
 be4:	fc 01       	movw	r30, r24
 be6:	05 90       	lpm	r0, Z+
 be8:	61 50       	subi	r22, 0x01	; 1
 bea:	70 40       	sbci	r23, 0x00	; 0
 bec:	01 10       	cpse	r0, r1
 bee:	d8 f7       	brcc	.-10     	; 0xbe6 <strnlen_P+0x2>
 bf0:	80 95       	com	r24
 bf2:	90 95       	com	r25
 bf4:	8e 0f       	add	r24, r30
 bf6:	9f 1f       	adc	r25, r31
 bf8:	08 95       	ret

00000bfa <strnlen>:
 bfa:	fc 01       	movw	r30, r24
 bfc:	61 50       	subi	r22, 0x01	; 1
 bfe:	70 40       	sbci	r23, 0x00	; 0
 c00:	01 90       	ld	r0, Z+
 c02:	01 10       	cpse	r0, r1
 c04:	d8 f7       	brcc	.-10     	; 0xbfc <strnlen+0x2>
 c06:	80 95       	com	r24
 c08:	90 95       	com	r25
 c0a:	8e 0f       	add	r24, r30
 c0c:	9f 1f       	adc	r25, r31
 c0e:	08 95       	ret

00000c10 <fputc>:
 c10:	0f 93       	push	r16
 c12:	1f 93       	push	r17
 c14:	cf 93       	push	r28
 c16:	df 93       	push	r29
 c18:	fb 01       	movw	r30, r22
 c1a:	23 81       	ldd	r18, Z+3	; 0x03
 c1c:	21 fd       	sbrc	r18, 1
 c1e:	03 c0       	rjmp	.+6      	; 0xc26 <fputc+0x16>
 c20:	8f ef       	ldi	r24, 0xFF	; 255
 c22:	9f ef       	ldi	r25, 0xFF	; 255
 c24:	28 c0       	rjmp	.+80     	; 0xc76 <fputc+0x66>
 c26:	22 ff       	sbrs	r18, 2
 c28:	16 c0       	rjmp	.+44     	; 0xc56 <fputc+0x46>
 c2a:	46 81       	ldd	r20, Z+6	; 0x06
 c2c:	57 81       	ldd	r21, Z+7	; 0x07
 c2e:	24 81       	ldd	r18, Z+4	; 0x04
 c30:	35 81       	ldd	r19, Z+5	; 0x05
 c32:	42 17       	cp	r20, r18
 c34:	53 07       	cpc	r21, r19
 c36:	44 f4       	brge	.+16     	; 0xc48 <fputc+0x38>
 c38:	a0 81       	ld	r26, Z
 c3a:	b1 81       	ldd	r27, Z+1	; 0x01
 c3c:	9d 01       	movw	r18, r26
 c3e:	2f 5f       	subi	r18, 0xFF	; 255
 c40:	3f 4f       	sbci	r19, 0xFF	; 255
 c42:	31 83       	std	Z+1, r19	; 0x01
 c44:	20 83       	st	Z, r18
 c46:	8c 93       	st	X, r24
 c48:	26 81       	ldd	r18, Z+6	; 0x06
 c4a:	37 81       	ldd	r19, Z+7	; 0x07
 c4c:	2f 5f       	subi	r18, 0xFF	; 255
 c4e:	3f 4f       	sbci	r19, 0xFF	; 255
 c50:	37 83       	std	Z+7, r19	; 0x07
 c52:	26 83       	std	Z+6, r18	; 0x06
 c54:	10 c0       	rjmp	.+32     	; 0xc76 <fputc+0x66>
 c56:	eb 01       	movw	r28, r22
 c58:	09 2f       	mov	r16, r25
 c5a:	18 2f       	mov	r17, r24
 c5c:	00 84       	ldd	r0, Z+8	; 0x08
 c5e:	f1 85       	ldd	r31, Z+9	; 0x09
 c60:	e0 2d       	mov	r30, r0
 c62:	19 95       	eicall
 c64:	89 2b       	or	r24, r25
 c66:	e1 f6       	brne	.-72     	; 0xc20 <fputc+0x10>
 c68:	8e 81       	ldd	r24, Y+6	; 0x06
 c6a:	9f 81       	ldd	r25, Y+7	; 0x07
 c6c:	01 96       	adiw	r24, 0x01	; 1
 c6e:	9f 83       	std	Y+7, r25	; 0x07
 c70:	8e 83       	std	Y+6, r24	; 0x06
 c72:	81 2f       	mov	r24, r17
 c74:	90 2f       	mov	r25, r16
 c76:	df 91       	pop	r29
 c78:	cf 91       	pop	r28
 c7a:	1f 91       	pop	r17
 c7c:	0f 91       	pop	r16
 c7e:	08 95       	ret

00000c80 <__ultoa_invert>:
 c80:	fa 01       	movw	r30, r20
 c82:	aa 27       	eor	r26, r26
 c84:	28 30       	cpi	r18, 0x08	; 8
 c86:	51 f1       	breq	.+84     	; 0xcdc <__ultoa_invert+0x5c>
 c88:	20 31       	cpi	r18, 0x10	; 16
 c8a:	81 f1       	breq	.+96     	; 0xcec <__ultoa_invert+0x6c>
 c8c:	e8 94       	clt
 c8e:	6f 93       	push	r22
 c90:	6e 7f       	andi	r22, 0xFE	; 254
 c92:	6e 5f       	subi	r22, 0xFE	; 254
 c94:	7f 4f       	sbci	r23, 0xFF	; 255
 c96:	8f 4f       	sbci	r24, 0xFF	; 255
 c98:	9f 4f       	sbci	r25, 0xFF	; 255
 c9a:	af 4f       	sbci	r26, 0xFF	; 255
 c9c:	b1 e0       	ldi	r27, 0x01	; 1
 c9e:	3e d0       	rcall	.+124    	; 0xd1c <__ultoa_invert+0x9c>
 ca0:	b4 e0       	ldi	r27, 0x04	; 4
 ca2:	3c d0       	rcall	.+120    	; 0xd1c <__ultoa_invert+0x9c>
 ca4:	67 0f       	add	r22, r23
 ca6:	78 1f       	adc	r23, r24
 ca8:	89 1f       	adc	r24, r25
 caa:	9a 1f       	adc	r25, r26
 cac:	a1 1d       	adc	r26, r1
 cae:	68 0f       	add	r22, r24
 cb0:	79 1f       	adc	r23, r25
 cb2:	8a 1f       	adc	r24, r26
 cb4:	91 1d       	adc	r25, r1
 cb6:	a1 1d       	adc	r26, r1
 cb8:	6a 0f       	add	r22, r26
 cba:	71 1d       	adc	r23, r1
 cbc:	81 1d       	adc	r24, r1
 cbe:	91 1d       	adc	r25, r1
 cc0:	a1 1d       	adc	r26, r1
 cc2:	20 d0       	rcall	.+64     	; 0xd04 <__ultoa_invert+0x84>
 cc4:	09 f4       	brne	.+2      	; 0xcc8 <__ultoa_invert+0x48>
 cc6:	68 94       	set
 cc8:	3f 91       	pop	r19
 cca:	2a e0       	ldi	r18, 0x0A	; 10
 ccc:	26 9f       	mul	r18, r22
 cce:	11 24       	eor	r1, r1
 cd0:	30 19       	sub	r19, r0
 cd2:	30 5d       	subi	r19, 0xD0	; 208
 cd4:	31 93       	st	Z+, r19
 cd6:	de f6       	brtc	.-74     	; 0xc8e <__ultoa_invert+0xe>
 cd8:	cf 01       	movw	r24, r30
 cda:	08 95       	ret
 cdc:	46 2f       	mov	r20, r22
 cde:	47 70       	andi	r20, 0x07	; 7
 ce0:	40 5d       	subi	r20, 0xD0	; 208
 ce2:	41 93       	st	Z+, r20
 ce4:	b3 e0       	ldi	r27, 0x03	; 3
 ce6:	0f d0       	rcall	.+30     	; 0xd06 <__ultoa_invert+0x86>
 ce8:	c9 f7       	brne	.-14     	; 0xcdc <__ultoa_invert+0x5c>
 cea:	f6 cf       	rjmp	.-20     	; 0xcd8 <__ultoa_invert+0x58>
 cec:	46 2f       	mov	r20, r22
 cee:	4f 70       	andi	r20, 0x0F	; 15
 cf0:	40 5d       	subi	r20, 0xD0	; 208
 cf2:	4a 33       	cpi	r20, 0x3A	; 58
 cf4:	18 f0       	brcs	.+6      	; 0xcfc <__ultoa_invert+0x7c>
 cf6:	49 5d       	subi	r20, 0xD9	; 217
 cf8:	31 fd       	sbrc	r19, 1
 cfa:	40 52       	subi	r20, 0x20	; 32
 cfc:	41 93       	st	Z+, r20
 cfe:	02 d0       	rcall	.+4      	; 0xd04 <__ultoa_invert+0x84>
 d00:	a9 f7       	brne	.-22     	; 0xcec <__ultoa_invert+0x6c>
 d02:	ea cf       	rjmp	.-44     	; 0xcd8 <__ultoa_invert+0x58>
 d04:	b4 e0       	ldi	r27, 0x04	; 4
 d06:	a6 95       	lsr	r26
 d08:	97 95       	ror	r25
 d0a:	87 95       	ror	r24
 d0c:	77 95       	ror	r23
 d0e:	67 95       	ror	r22
 d10:	ba 95       	dec	r27
 d12:	c9 f7       	brne	.-14     	; 0xd06 <__ultoa_invert+0x86>
 d14:	00 97       	sbiw	r24, 0x00	; 0
 d16:	61 05       	cpc	r22, r1
 d18:	71 05       	cpc	r23, r1
 d1a:	08 95       	ret
 d1c:	9b 01       	movw	r18, r22
 d1e:	ac 01       	movw	r20, r24
 d20:	0a 2e       	mov	r0, r26
 d22:	06 94       	lsr	r0
 d24:	57 95       	ror	r21
 d26:	47 95       	ror	r20
 d28:	37 95       	ror	r19
 d2a:	27 95       	ror	r18
 d2c:	ba 95       	dec	r27
 d2e:	c9 f7       	brne	.-14     	; 0xd22 <__ultoa_invert+0xa2>
 d30:	62 0f       	add	r22, r18
 d32:	73 1f       	adc	r23, r19
 d34:	84 1f       	adc	r24, r20
 d36:	95 1f       	adc	r25, r21
 d38:	a0 1d       	adc	r26, r0
 d3a:	08 95       	ret

00000d3c <_exit>:
 d3c:	f8 94       	cli

00000d3e <__stop_program>:
 d3e:	ff cf       	rjmp	.-2      	; 0xd3e <__stop_program>
